#BlueJ class context
comment0.target=GridBasicDataFileHandler
comment0.text=\n\ \ Grid\ GUI\ Support\ Package\:<br>\n\n\ \ A\ <code>GridBasicDataFileHandler</code>\ object\ reads\ and\ writes\ information\n\ \ about\ a\ grid\ and\ the\ objects\ in\ it\ to\ and\ from\ a\ data\ file.\n\n\ \ <p>\n\ \ The\ <code>GridBasicDataFileHandler</code>\ object\ assumes\ that\ the\ objcts\ in\n\ \ the\ grid\ have\ constructors\ that\ expect\ two\ parameters\:\ the\n\ \ grid\ in\ which\ the\ object\ resides\ and\ acts,\ and\ its\ initial\ location\ in\n\ \ the\ grid.\n\n\ \ <p>\n\ \ The\ first\ line\ of\ the\ input\ file\ should\ be\ either\n\ \ <pre>\n\ \ \ \ \ bounded\ <i>rows\ columns</i>\n\ \ </pre>\n\ \ or\n\ \ <pre>\n\ \ \ \ \ unbounded\n\ \ </pre>\n\ \ where\ <i>rows</i>\ and\ <i>columns</i>\ are\ integers\ indicating\ the\n\ \ number\ of\ rows\ and\ columns\ in\ a\ bounded\ grid.\ (The\ internal\n\ \ representation\ used\ for\ the\ grid\ is\ whatever\ has\ been\ set\ as\ the\n\ \ default\ bounded\ or\ unbounded\ grid\ in\ <code>GridPkgFactory</code>.)\n\n\ \ Each\ line\ after\ the\ first\ represents\ an\ object\ in\ the\ grid\n\ \ and\ should\ be\ in\ the\ following\ format\:\n\ \ <pre>\n\ \ \ \ \ class\ row-pos\ col-pos\n\ \ </pre>\n\ \ where\ <code>class</code>\ is\ a\ string\ indicating\ the\ class\ name\ of\n\ \ the\ object\ ("Fish"\ for\ example),\ and\ <code>row-pos</code>\ and\n\ \ <code>col-pos</code>\ are\ integers\ indicating\ its\ row\ and\ column\n\ \ position.\n\n\ \ @author\ Alyce\ Brady\ (based\ on\ the\ AP\ CS\ MBSDataFileHandler)\n\ \ @version\ 4\ May\ 2019\n\ \ @see\ GridPkgFactory\n\n
comment1.params=file
comment1.target=edu.kzoo.grid.Grid\ readGrid(java.io.File)
comment1.text=\ Reads\ information\ about\ a\ grid\ (grid\ +\ objects)\ from\ an\n\ initial\ configuration\ data\ file.\n\ \ @param\ \ file\ \ \ \ \ \ \ java.io.File\ object\ from\ which\ to\ read\n\ \ @throws\ java.io.FileNotFoundException\ if\ file\ cannot\ be\ opened\n\ \ @throws\ RuntimeException\ \ \ if\ invalid\ information\ is\ read\ from\ file\n
comment2.params=
comment2.target=edu.kzoo.grid.Grid\ buildGrid()
comment2.text=\ Read\ grid\ specifications\ and\ construct\ it.\n\ \ @throws\ RuntimeException\ \ if\ invalid\ grid\ information\ is\ read\n
comment3.params=grid
comment3.target=boolean\ readObject(edu.kzoo.grid.Grid)
comment3.text=\ Reads\ information\ about\ the\ next\ object\ and\ constructs\ it\ using\n\ \ the\ <code>GridPkgFactory</code>\ class.\ (The\ factory\ must\ know\ how\ to\n\ \ construct\ objects\ with\ the\ class\ name\ read\ in\ from\ the\ file.)\n\ \ The\ object\ adds\ itself\ to\ the\ grid\ as\ it\ is\ constructed.\n\ \ @param\ grid\ \ \ the\ grid\ in\ which\ object\ should\ be\ created\n\ \ @return\ <code>true</code>\ if\ object\ was\ successfully\ read,\n\ \ \ \ \ \ \ \ \ \ <code>false</code>\ at\ EOF\n\ \ @throws\ RuntimeException\ \ \ if\ invalid\ location\ information\ is\ read\n
comment4.params=cls\ grid
comment4.target=void\ constructObject(java.lang.Class,\ edu.kzoo.grid.Grid)
comment4.text=\ Reads\ in\ information\ about\ an\ object\ in\ the\ grid\ (e.g.,\ location)\n\ \ and\ constructs\ the\ object.\ \ Can\ be\ redefined\ in\ subclasses\ to\ read\n\ \ additional\ information,\ such\ as\ direction\ or\ color.\n\ \ @param\ cls\ \ \ \ \ \ \ class\ of\ new\ grid\ object\n\ \ @param\ grid\ \ \ \ \ \ grid\ in\ which\ location\ must\ be\ valid\n\ \ @throws\ RuntimeException\ \ \ if\ invalid\ location\ information\ is\ read\n
comment5.params=grid
comment5.target=edu.kzoo.grid.Location\ readLocation(edu.kzoo.grid.Grid)
comment5.text=\ Reads\ in\ a\ Location\ object\ (must\ be\ a\ valid\ location\ in\n\ \ <code>grid</code>).\n\ \ @param\ grid\ \ \ \ \ \ grid\ in\ which\ location\ must\ be\ valid\n\ \ @return\ \ the\ newly\ created\ Location\ object\n\ \ @throws\ RuntimeException\ \ \ if\ invalid\ location\ information\ is\ read\n
comment6.params=
comment6.target=int\ readInt()
comment6.text=\ Returns\ the\ next\ token\ in\ the\ file\ as\ an\ integer.\n\ \ @return\ \ \ \ an\ int\ containing\ the\ next\ number\ in\ the\ file\n\ \ @throws\ \ \ \ java.io.EOFException\ if\ EOF\n\ \ @throws\ \ \ \ java.lang.NumberFormatException\ if\ next\ token\ is\ not\ an\ int\n\ \ @throws\ \ \ \ java.io.IOException\ if\ another\ type\ of\ input\ error\ occurs\n
comment7.params=
comment7.target=java.lang.String\ readString()
comment7.text=\ Returns\ the\ next\ token\ in\ the\ file\ as\ a\ string.\n\ \ @return\ \ \ \ \ a\ String\ containing\ the\ next\ token\ in\ the\ file;\ or\ null\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ if\ end\ of\ file\ is\ encountered\n\ \ @throws\ \ \ \ \ java.io.IOException\ if\ an\ input\ error\ occurs\n
comment8.params=grid\ file
comment8.target=void\ writeGrid(edu.kzoo.grid.Grid,\ java.io.File)
comment8.text=\ Writes\ information\ about\ a\ grid\ into\ a\ data\ file,\n\ \ including\ the\ grid\ dimensions\ and\ the\ class\ names\ and\n\ \ locations\ of\ the\ objects\ in\ the\ grid.\n\ \ @param\ \ grid\ \ \ grid\ to\ write\ to\ file\n\ \ @param\ \ file\ \ \ java.io.File\ object\ to\ which\ to\ write\n\ \ @throws\ java.io.FileNotFoundException\ if\ file\ cannot\ be\ opened\n\ \ @throws\ java.io.IOException\ if\ error\ writing\ to\ file\n
comment9.params=out\ obj
comment9.target=void\ writeGridObject(java.io.PrintWriter,\ edu.kzoo.grid.GridObject)
comment9.text=\ Writes\ information\ about\ an\ object\ in\ the\ grid\ (e.g.,\ location).\n\ \ Can\ be\ redefined\ in\ subclasses\ to\ write\ additional\ information,\n\ \ such\ as\ direction\ or\ color.\n\ \ @param\ out\ \ \ \ \ \ where\ to\ write\ information\n\ \ @param\ obj\ \ \ \ \ \ object\ whose\ information\ should\ be\ written\n
numComments=10
